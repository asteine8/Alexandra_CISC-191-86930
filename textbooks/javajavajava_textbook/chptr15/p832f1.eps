%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 149.000000 44.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 149 44
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 149 44
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Times-Roman
%!FontType1-1.0: Times-Roman 1.0000.0.0000
14 dict begin/FontName /Times-Roman def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /colon put
dup 34 /space put
dup 35 /S put
dup 36 /l put
dup 37 /i put
dup 38 /d put
dup 39 /e put
dup 40 /h put
dup 41 /o put
dup 42 /w put
dup 43 /F put
dup 44 /r put
dup 45 /a put
dup 46 /m put
dup 47 /T put
dup 48 /one put
dup 49 /s put
dup 50 /t put
dup 51 /parenleft put
dup 52 /parenright put
dup 53 /n put
dup 54 /x put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -416 1 index div -877 2 index div 3482 3 index div 2604 5 -1 roll div]cvx def
/sfnts [<







061226002B2B2B2B012B2B2B2B2B8100715D015D1A0133320015140223220035000706151412333236353402233734FDC7C60104FCC8C0FEF601593A64A18F70799A922502970113FEFCD8C7FEDA011AD5019E345BDFB2FECCCEA7AD01323C0000010009000002B103AF00290088404CC41E013722011F29010343001C29202424431C2820230B20043F0A1C0B9210221F1E032B24242204030429141D1320801D01201D301D021D951D1027170729280A801A011A2B1327242F0403B801FFB4AF2B012B2A2FCC5DF43CFDE410C45D003F3C3F4DE4CCED715D1239113912173901111217390010F5EDFC01F52B2B015D3130005D015D373E013511342623220607353E0137363732161D013E0133321615140623222623220615111416371521095C3C25310A21123978173235070340774033403125264D162366505DFE132108315001C36355050421142A0913180A10A459643D2E293846713CFE3D5643022100000000020068FFED02C903B10031003201034021130013011602290D390D680C690D790B790C880C0A2908301C31D140011C210000B80191B331D1402DB80121400F222A181C19D1401B1C211A1F1A011AB80191B319D14015B80121402B21120D000A082226230D0A04051F3332120705332A0B320F1A01EF1AFF1A021A4608413200302701273422B801F340100027700FA00FC00F030F4600340134332FCC5D76D4185DE4ED10D45D1239ED76C45D71182F003FED3F3CED11173901111239123900103D1AEC181AF4E55D01103D1AED181AF4ED00103D1AEC1A18F4E501101A3DED1A18F4ED31304379401C28292021101106070629081E012011221E000728051E0021101F1E01002B2B012B2B81818181005D13331617163332363534262F012E013534363332163332363733132326272623220615141F01161514062322262322060723016A21172746874B57323F707B74A079357F0812100618071F14223E7546508A84D5B18F3C980E0C12051A0125013B723D7053422A4E254042865B7090280A0BFEE9613664563A5C4847749A769628110C03B900010019FFED023B04A100220057402A0911011B22021402391E2206400B210A47073E0F0B400A210B24401E210022022F141B1840112C1424232FCCDC1AC81ADC3DC41810FDC4CC1AC81A10D61AC81A003FFD76D41A18C81A3FCCFD3C111239313001005D011523031417163332363717070E01232227263511232E01353436373E013732161D010209CC020D18462435221A16347436762A176D05050918453D710D05039A48FDC04C27452225161E463A693965025E0306050A0B14394798040DF6000001002AFFEC058E03A1003A01084086260726303915391B39213A22060907080E080F081409301822292277148714092702270327043702370337040632351A




00>] def
/CharStrings 26 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/one 4 def
/colon 5 def
/F 6 def
/S 7 def
/T 8 def
/a 9 def
/d 10 def
/e 11 def
/h 12 def
/i 13 def
/l 14 def
/m 15 def
/n 16 def
/o 17 def
/r 18 def
/s 19 def
/t 20 def
/w 21 def
/x 22 def
/macron 23 def
/dcroat 24 def
/dong 25 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-416 -877 3482 2604}def
/UniqueID 4416489 def
currentdict currentfile eexec


9E5E0C798B7A3A1456A898BE549FCA17A3C8D2096F4A6329D32B478ED6CD6C0DD405664F16A5E2CE25B0F1BF4D477FCFC84037BDB24D14CBE7A429746E99A09D04A53ECD1934D857C706B3F18EE4C42E9248EB9A596D280B505614A7276CBE2B53BEDE16C151331A50304F787937A5DA4AA57489865375BEF6F23AC8213663FA65494E2290F53D2B15549B53987FE3AC0A0DD8915A438717EA59955364E86F35F09E600835DB3B86C756A05BBD9991574F5DA2674A19A795F0B6101950C88FF72CA7FFA74576E1B498676304FFBB8850636812698E39188967FB27E118FA5856D604160934E9A8845406141633D26B04A16AD058764E58DCB1398BB5041D86EFAB95EBE48C0831A825D59464F7A6024D61FC31A67AF30223094AC95128A1029C24893B88656F33DAFCC2B4CC74B86C1BE34207149B7B5C9E5CDB1C736426FCAA649D6A3E5C9164D5CC058A5E56E40AC8F0CBBFA7378376774DAF865C428DA13FE27E212B4274898649F79498A6726BEC58A46E449AFBA895E790CC5E21DDBECAA6DC2D959C96CF429A6E19D91F0F7732D5AB9245D2793F17DB19A03E108261BCB02D8744F317334655237EFE87E3FF07E355865CF1469C4D3019CF9B9A2349C17F8D3A53C064BCFB77A9240F4BB61B40F783AA5B08121ABFE2585EC30D69CDEA800C700ADC30CBA87EB1819D382708D90024F4159EA3976EB7A6D8043DD017E37D7DF36558D8D5CF900AA52F9C2ABE199659D6C86F035F933BB2DBDC5A91DFD841A976C1204643DEFB88E83F00FCDB468F729A25EF2A3EEA40CB6390406B71A51A6EFA19A7846792D4D880D16C6DF6323DAC7F1FCC5DEBB4E8DBC6A62AFF53C893CB77F58A17624314B26E5CCAFF9CDBA356805EE9C72909E062CA75B8C354A8E731793C92D0889881BB6622F4D4CA0602AAB2D1181E3F110CE6107E34973C37A171BE78B192902A695BBF04307D46215946178D3C18C10E72000C2A6755A4FAEFBF28E9693843E9FC758F399856B588E4DE8EE2BBF5A03AF7BFC17333390067923B2A21DA7FAFA003A23D9222652CCEA812DAE50D957042183F714B381A282D0F29B835C0F87C77EE8C1A08B47AEC410AA3C3EA87D9CC20FEB71F4ECF7BD12EE5BC392A7B6B77A68C23E57C079928A0ECD51D17805B9DE9887E8C4E608081CF3B190C480BFD39E67617C76DAD891195A588804E4DF567911CD6EF2867DE2A19A698D3710FD6A8D882F0A9C9FBADD4457345EC99B51C6FDC1AB5019B3669C795D1F8884CCF3D99DEB1D02EE923DFAA11F9EC9EC552ACE9D29A90F10457EEA9456F5D54498E2BD941570C308CAE4E57C7FA44C1606EC782486B29E6F5B3CEA0E850B7A92B874D9355BFBA06ED40761A2462ACD9DF9E12B565A9CB8A07DFD9D64C599D1B9F10F5702A02FAB58CB2ED99266C304F806E1903C1594B6FEC65D63BA4

1C9BD8347D89DE523813851E5970A62A6F681E572B6AC093BB1DAE992E5CC88375497F18B7EF5751C5113028809FCF7453EC5F314883DEDAACAA0936004EA3DBD9C6BA2D826186220CA01E6819E81D736BBB128C7E83FA89AE54ACE27FF2A3CEC007E128A70350879B6BF7EFF497177FDCEAA53ED88ACE8D8A3188593D0AF02040875D74C23C2659E61EC633D3E89888EFF81E718FB64075E02F4936679A8E435E0F2DBEA3A152062ED5E275F7772D8D80006F91F47B2BC79B15D9C66F6EE64C2553C3621763CC64B874BB7CC0FDE8ADF533164948BEE745C12941A7BFDEB633A3B0464603D1FB9DF749267A2B1B36ADC1FCBC8676133D80984E88C0645FFFD77BC651112DDC05EDE042157D459DAE627C0C3B5F3414EEBB174D046DE7567259A85EED1ECEE2554C82D961C262E1CD20E787D5A356B8835278D36DA66FCA64A9A78DA957C8D0184B2B51619B78747FD9C698333F5048326C8147BD59919C1DC7CEED87A39FA314B09AF2257C4574EB1F45BE1C018777E91249B6ACCBDE35ACD13F8C1C40EECEE18A3547B1A0D84D1A3D36C965A44BA191D35B5369CD6E286F06B3807105E8E11EEE33DC36FE829E932A3C90ACF750C36BFF2CD74BE68AAA951285147810B25F07B1D2CE73AD7E2057DE5658EDAB8D63E8ABF0DA06ED0799D4FE20DEC0A6B5A9478CCD49240AE699B6EEFC12775D4644C0BA6564D72A0D333BBFDBE83886AB160FF0133398866C6C201277B73EE161A981CD368BDB77524CACF420AA3F84F9C0540AFC3E781AD6DAA9495CE8D3B50070C488EF24B0269B6A9E450AD5D0B73597D08A141341481F099EE151050ABBAA5F83879BEE36479B90F377C264155B95DE5E77F01C1A4CFCE78470C69E5B834B1DD13698F94FA11456FF6407713CBF5AD6ADCA25EA3D0121EC01CF09463CF58D726F7FFF73E8EB75DC1C534E398D75F5BF6B24DD463D34321DD91DEC106F3065410F6328DB98A6829BE95809B4090BE20FD941B80368B108F308910ABBC10836CCFCBC6CB5C62C4243EB162E5DAB76A809C82B1F159E892E1738E04ECB64A890CBDD2EE296F6F2441002A872B32D6EA14DDE718AB58BF88EF848616F604D6C0273A0D296AE87E1D468B840234575A87BB9786CF0D1FF9057B5A8C0467A13DDB3BD3AD9ECFE5490B1526F1BF01691011A60185CDA2F91A5C341E0F137453B77986A7E6A40C0BDA8674785BB2606034866EC0E511E2CE062873BB4D77ED010671C24DA32BD61DDA30440314F2E0B7C7851E4F52B10C91A3A960BC361DBA3E65728B578144358005E31D697AE1E782A60802EA9BC69A4304836402FB11AA5FF72288D1C8F450CCCF5381F4CFCD229CD65C82C39CB81A23BE0F76E18F578289A0CDAEAF99CC525DFCCB462E8A2B7481B6F65D2C6D0C5E11E2659DDF3ADDC2427B35229D21BACBC0C9BE2CB7E67
D2983DBBA5776803EF886AE30883334762A70086F37739F04ABB6E8DBF6959B2C2D83B727C76F09493A2DDFE99BBD7DEC1932A19D70A332DB7E234EA71ECF858163EDF81898F021978511ABD3FB132E08AF29B1EFEA21143D034790EB351E8526026BF5B4870D245BBE8042C6FDAD5FD248C2FA10C7E01F0AB31CBCC1C57FBD2D841AD35BCFBBFE0BC463619FBB04AC5E98C4A52F9E9D0A6DAFF1C06BCBDA97E23228A297495D87CA9BA1D65C99A69330EF5E974C09C18DFC204F972F21C426534A4150F420E502F6E793E46358A87F6607B79198B2B6DBB18
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Times-Roman cguidfix
/F1.1/Times-Roman renmfont
%%EndPageSetup
2 J
0.60000002 i
1 0 0 0 setcmykcolor
q
0 0 149 44 rc
1 0 0 -1 -231 418 cm
303.58008 407.96289 m
324.21948 407.96289 l
S
0.100098 0 0 0 setcmykcolor
CM
2.3417833 3.3378911 m
71.822281 3.3378911 l
71.822281 17.737091 l
2.3417833 17.737091 l
h
2.3417833 3.3378911 m
f
1 J
1 0 0 0 setcmykcolor
1 0 0 -1 -231 418 cm
233.84178 415.16211 m
303.3223 415.16211 l
303.3223 400.76291 l
233.84178 400.76291 l
h
233.84178 415.16211 m
S
0 0 0 1 setcmykcolor
236.10468 411.96561 m
301.05978 411.96561 l
S
0 i
1 0 0 -1 35.826157 12.25781 cm
/F1.1[ 8 0 0 -8 0 0]sf
-30 3 m
(!"#$%&'#\(\)*+,-.')[ 2.222656 2.000000 4.449219 2.222656 2.222656 4.000000 3.550781 4.449219 4.000000 4.000000 5.777344 4.449219 2.664062 3.550781 6.222656 0.000000 ] xS
0.60000002 i
0.100098 0 0 0 setcmykcolor
CM
92.172989 3.3378911 m
146.29208 3.3378911 l
146.29208 17.737091 l
92.172989 17.737091 l
h
92.172989 3.3378911 m
f
1 0 0 0 setcmykcolor
1 0 0 -1 -231 418 cm
323.67297 415.16211 m
377.79199 415.16211 l
377.79199 400.76291 l
323.67297 400.76291 l
h
323.67297 415.16211 m
S
0 0 0 1 setcmykcolor
339.02899 411.96561 m
362.43597 411.96561 l
S
0 i
1 0 0 -1 119.70499 12.25781 cm
-12 3 m
(!"/%.',)[ 2.222656 1.859375 4.609375 2.222656 6.222656 3.550781 0.000000 ] xS
0.60000002 i
CM
100.20039 37.203499 m
96.360489 35.0434 l
96.360489 39.483601 l
100.20039 37.203499 l
h
100.20039 37.203499 m
f
1 0 0 -1 -231 418 cm
331.70038 381.29651 m
327.86047 383.4566 l
327.86047 379.01639 l
331.70038 381.29651 l
h
331.70038 381.29651 m
S
0 J
327.86047 381.2312 m
321.61987 381.2312 l
S
0 i
1 0 0 -1 73.899986 38.9883 cm
-14 3 m
(0!"12-,234)[ 4.000000 2.222656 2.000000 3.113281 2.222656 3.550781 2.664062 2.222656 2.664062 0.000000 ] xS
0.60000002 i
CM
54.519886 27.6035 m
58.359787 29.8832 l
58.359787 25.443399 l
54.519886 27.6035 l
h
54.519886 27.6035 m
f
1 J
1 0 0 -1 -231 418 cm
286.0199 390.89651 m
289.85977 388.61679 l
289.85977 393.05661 l
286.0199 390.89651 l
h
286.0199 390.89651 m
S
0 J
289.85977 390.8316 m
296.22028 390.8316 l
S
0 i
1 0 0 -1 84.319885 29.3883 cm
-18 3 m
(5'62#$%&'34)[ 4.000000 3.550781 4.000000 2.222656 4.449219 2.222656 2.222656 4.000000 3.550781 2.664062 0.000000 ] xS
ep
end
%%Trailer
%%EOF
