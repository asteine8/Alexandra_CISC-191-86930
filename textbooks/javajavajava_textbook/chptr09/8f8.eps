%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (a a) (EMILCOMP)%%Title: (8f8.eps)%%CreationDate: (11/13/01) (3:31 PM)%%BoundingBox: 14 -340 245 -78%%HiResBoundingBox: 14.6899 -339.8564 244.8506 -78.3687%%DocumentProcessColors: Cyan Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 133 -210 133 -210%AI3_TileBox: -141 -657 434 98%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 324 264%AI5_RulerUnits: 3%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -378.5 133.5 1 1016 703 18 0 1 8 65 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-141 -657%%AI3_PaperRect:-19 774 593 -18%%AI3_Margin:19 -19 -18 18%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 116 128 8%%BeginData: 25850 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04272E272E272E2727272E272E272E272E272E272E272E272E27%2E2727272E272E272E272E2727272E272E272E272E272EFD0427A8FF7D52%275228595259525928595259525952595259285952595259525952592859%52595252525952595259525952592759525952595252527DFFFFFFF8847D%A87D847D847DAF7DAF84AF84AF84AF847D84AF84AF84AF84AF84A87DAF84%AF7DAF84AF84AF7DAF84AF84A884AF84AF84AF7DAF2EA8FF7D527D7DAF7D%847D847D7D7DAF84AF84AF84AF7DA884AF84AF84AF84AF842784AF84AF7D%AF84AF84A884AF84AF848484AF84AF84A884AF27FFFFFF277DAF7DA884AF%A9AF52A87DA8527D7DAF8459F87D84AFA9AF84AFA9AF7DAFA9AF84A8A9AF%84AF7EAF84AFA9AF7DAFA9AF84AF7EA88459A8FF52847DA87DAFA9AF84AF%7DA87DA87DA87DAFA98459AFA9AF525953AF8452F8AF84AF7EA884AFA9AF%7DAFA9AF84A8A8AF84AFA9AF7DAFA927FFFFFF27AF7DAF7D7D7DAF52F805%AFFD05F852F852F85284AF84AF84AF7DA884AF84A87DAF84AF847D84AF84%AF7DA884AF84AF847D84AF27A8FF5259A87DAF7D8484AF7DAF84AF84AF7D%A87D8427F8F884FD05F859F8F827AF847D84AF84AF7DA884AF84AF7DAF84%AF84AF7DA884AF27FFFFFF2EA9AF7EAFA87D53272727FD05F827F852A87D%52A87DA87EAFA9A8A9AFA9AF7DAFA9AFA9AF7EAFA9AFA9A8A8AFA9AFA9AF%7EAFA959A8FF5284A9A8A8AFA8A87DA8A9AFA9AFA9AFA98427F82727FD04%F82752F8525327A9AF7EAFA9AFA9A8A9AFA9AFA8A8A9AFA9AFA9A8A9AFA9%52FFFFFF27AF84A87D7DF8F8F82705F8F8FF27527DF8F88459592E7D59AF%7DA87D847DA87D7D84AF84AF7DAF84AF84AF7DAF84AF84AF7DAF84AF2EA8%FF7D59AF847D7DAF7D7D7DAF84AF84AF8484F8F8F827F8F8F8FF275252F8%2759F852275959AF84AF7DAF84AF84847DAF84AF84AF7DAF84AF27FFFFFF%2EA9AF8452F87DF8522727F8F8277D52FD05F82727F8F8F82752AFA9AF7D%A87D847DA8A88484AFA9AF7DA8A9AF84AFA97D84AFA9597DFF528484AFA8%848484A9AF7DA8A9AF84AF2727F8522727F8F827A87D27F8F8F8272727F8%F87DA87DA8A9AF84AF7DAF84AFA9AF7DAFA9AF8452FFFFFFF8AF592EF859%FD07F87DFFFF7DFD04F88484AF5984275984AF84AF7DAF84AF7DA87D7D7D%847D7D7DAF84AF84AF7DAF84AF2EA8FF7D59AF84AF7D7D7DAF84AF7D7D7D%AF27F8F805FD05F87DFFFF7DFD04F85252AF84AF7D7D7D84FD057DAF84AF%847D7DAF84AFF8FFFFFF2E7E27F8A82727A9AF5352F8F827FFFF27275928%F8F82EA9AFA984A9AFA9AF7DAFA9AF53847DAFA9AFA9AF7EA87DA87EAF7E%AFA9AFA959A8FF5284A9AF7DA87DAFA9AFA9AFA9A852F827277EAF5352F8%F827FFA827278453F8F852A9AF27A87EAFA9AFA9AFA8A87DA87EA87DAFA9%AFA952FFFFFFF8F8F8A827F85252F8F80559F8F8F82727AF84AFF859F8F8%59A87DAF84AF7DA884AF848427A884AF84AF84AF84AF84AF7D7D84AF84AF%2EA8FF7D527D7DAF84AF7DAF84AF84AF7DF8F8F82E59F827277D0527F8F8%2EAF84AFF852F85984847DAF84AF84AF84AF84AF84AF7DAF84AF84AF27FF%FFFF2727AF53F852AFF85984AFA9AF8484A87D7DAFA95227AF27F852AFA9%AF84A8A9AF84AFA98484AFA9AF84AFA9AF84AFA9A884AFA9AF8459A8FF2E%7DA9AF84AFA9A87DAFA9AF842EF827F8A8522784AFA9AF84A8A8AF84AF7E%7DF87DF8A87DAFA9AF84AFA9AF84AFA9AF7DA8A9AF84AFA927FFFFFF27AF%59F8278427277DAF84AF7D7D7DAF84847DAF2EF884AF27AF84AF84847DAF%84AF84847DAF84AF84AF84AF84AF84A87DAF84AF84AF27A8FF5259AF84AF%7D7D7D847DAF8459F859F8847D52F8AF84AF84AF7DAF84AF7D8459F8592E%F88484AF84AF84AF84AF84AF847D7DAF84AF84AF27FFFFFF2EA92727A87D%F853A87EAF7DA8A9AFA9AFA9AF7DA8F8AFA8A8A9AFA9AF7DAFA9AFA9AF7E%AFA9AFA9AFA9AFA9AFA9AF7DAFA9AFA9AFA959A8FF5284A8A87DAFA9AFA9%A8A9A82759F852A9AF522E7DAFA9AF7DAFA9AFA9A8A9AFF87DA952A9AFA9%AFA9AFA9AFA9AFA9A87EAFA9AFA9AFA952FFFFFF007D27AF8452F8AF8484%7DA884AF84AF84AF84AF7DF8277D84AF84AF7DAF84AF84AF7DAF84AF84AF%84AF84AF84AF7DAF84AF84AF84AF2EA8FF5252A884AF84AF84AF7D847DAF%27F87DAF845905AF7D847DA884AF84A87DAF848484A87DAF84AF84AF84AF%84AF84AF7DAF84AF84AF84AF27FFFFFF2EA9AF84AFF87D7DA87E7D84AFA9%AF84AFA9AF84AFA8A87DAFA9AF7DA8A9AF84AF7EA884AFA9AF84AFA9AF84%AFA8A884AFA9AF84AFA9597DFF528484AFA9AF84A87DA87DA87EF859AFA9%AF5927A9AF7DA87EAF84AF7DAF84AFA9AF7DAFA9AF84AFA9AF84AFA9AF7D%AFA9AF84AFA9AF8452FFFFFFF8AF84AF27277DA87DAF7D7D84AF84AF84AF%84AF7D847DAF7DA8847D84AF84AF7D7D84AF84AF84AF84AF84AF847D84AF%84AF84AF84AF2EA8FF7D59AF84AF7D7D7DAF84AF7D2705AF84AF8484F8A8%7DA884A87DA87DAF84AF84AF7DA884AF84AF84AF84AF84AF7DA884AF84AF%84AF84AFF8FFFFFF2EA9A87D7D7EAFA9AFA9AF7EA8A9AFA9AFA9A87DAFA9%AFA9AF7EA8A8AFA9AFA9A8A8AFA9AFA9AFA9AFA9AFA9A87EAFA9AFA9AFA9%AFA959A8FF52847EA87EAFA9AFA9AFA9AF52AFA9AFA9AF53F8A8AFA9AFA9%AF7DA8A9AFA9AFA8A8A9AFA9AFA9AFA9AFA9AFA9A8A9AFA9AFA9AFA9AFA9%52FFFFFFF87D7DAF84AF84AF84AF84AF7DAF84AF7D7D7D8484AF84AF7D84%7D847DAF84AF7DAF84AF84AF84AF84AF84AF7DAF84AF84AF84AF84AF2EA8%FF5252A87DAF84AF84AF84AF84AF7DAF84AF7D8452A884AF84AF7DA87D84%7DAF848484AF84AF84AF84AF84AF84A87DAF84AF84AF84AF84AF27FFFFFF%2784AFA9AF84AFA9AF84AFA9AF7DAF7DA884AFA88484AF7DA884AFA9A87D%AF7DAF84AFA9AF84AFA9AF84AF7DAF84AFA9AF84AFA9AF8459A8FF5284A9%AF84AFA9AF84AFA9AF84A87EA87DAFA9AF7DA8A9A87DAFA9AF84A87DA87D%AFA9AF84AFA9AF84AFA9AF7DAFA9AF84AFA9AF84AFA927FFFFFF27AF84AF%84AF84AF84AF84AF7D7D7DAF84AF84AF7D7D7DAF84AF84AF84AF7D847DAF%84AF84AF84AF84AF7DA884AF84AF84AF84AF84AF27A8FF5259AF84AF84AF%84AF84AF84A87D7D7DAF84AF84AF7D7D7DAF84AF84AF84A87D847DAF84AF%84AF84AF84AF7DAF84AF84AF84AF84AF84AF27FFFFFF2EA9AFA9AFA9AFA9%AF7EA87DAFA9A8A8AFA9AFA8A87DA8A9AFA9AFA9AF7DAFA8A87EAFA9AFA9%AFA9AFA9A8A9AFA9AFA9AFA9AFA9AFA959A8FF5284A9AFA9AFA9AFA9AF7E%A87EAFA9A8A9AFA9AF7DA87EA8A9AFA9AFA8A87EAFA8A8A8AFA9AFA9AFA9%AF7EA8A9AFA9AFA9AFA9AFA9AFA952FFFFFF27AF84AF84AF7DA87D847DAF%84AF848484AF7DA884AF7D8484AF7D847DAF84AF84A87DAF84AF84AF8484%7DAF84AF84AF84AF84AF84AF2EA8FF7D59AF84AF84AF7D7D7DAF84AF84AF%847D84A87DAF84AF7D8484AF7D847DAF84AF84A87DAF84AF84AF7D8484AF%84AF84AF84AF84AF84AF27FFFFFF2EA9AF84A87DA87DAFA9AF84AFA9AF84%A87DAF84AFA9AF84847E8484AFA9AF84AF7E7D7DA8A9AF84AF7DAF84AFA9%AF84AFA9AF84AFA9597DFF528484AF7E847DAFA9AF84AFA9AF84AF7E7D7D%AFA9AF84AFA8A87DA8A9AF84AFA9AF7DA87DA884AFA98484AFA9AF84AFA9%AF84AFA9AF8452FFFFFFF8A87D7D7DAF84AF84AF84AF84AF7D7D7D8484AF%84AF84AF7DA884AF84AF84AF7DA884AF7D7D7DAF7DAF84AF84AF84AF84AF%84AF84AF2EA8FF7D52847DA884AF84AF84AF84AF7D847DA87DA884AF84AF%7D847DAF84AF84AF7DA87DAF84AF7D7D7DA87DAF84AF84AF84AF84AF84AF%84AFF8FFFFFF277EAFA9AFA9AFA9AFA9AF7EA87EAFA9AF7EAFA9AFA9A87D%AFA9AFA9AFA9A87DAFA9AFA9AFA9A87DA8A9AFA9AFA9AFA9AFA9AFA9AFA9%59A8FF527DA9AFA9AFA9AFA9AFA9AF7DA8A8AFA9AF7DAFA9AF7EA8A8AFA9%AFA9AF7EA8A8AFA9AFA9AFA9A87DAFA9AFA9AFA9AFA9AFA9AFA9AFA952FF%FFFF27AF84AF84AF84AF7D847DA884AF84AF84AF7DAF7D7D7DAF84AF84AF%7D7D7DAF84AF84AF84A87DA884AF84AF84AF84AF84AF84AF84AF2EA8FF7D%59AF84AF84AF84AF7D7D7DAF84AF84AF84AF7DAF7DA884AF84AF84AF7DA8%84AF84AF84AF7D847DAF84AF84AF84AF84AF84AF84AF84AF27FFFFFF2784%AFA9AF84A87DA884AFA9AF84AFA9AF84AF7DA884AFA9AF84AF7DA884AFA9%AF84AFA8A87DAFA9AF84AFA9AF84AFA9AF84AFA9AF8459A8FF5284A9AF84%AF7E847DAFA9AF84AFA9AF84AFA8A87DAFA9AF84AFA9A87DAFA9AF84AFA9%AF7DA8A9AF84AFA9AF84AFA9AF84AFA9AF84AFA927FFFFFF27AF7DA87D84%7DAF84AF84AF84AF84AF7D7D7DA87DAF84AF84847DAF84AF84AF84AF7D84%84AF84AF84AF84AF84AF84AF84AF84AF84AF27A8FF5259AF7D7D7DA884AF%84AF84AF84AF7D847DA87D7D7DAF84AF7D7D7DAF84AF84AF7DA87DAF84AF%84AF84AF84AF84AF84AF84AF84AF84AF27FFFFFF2E7EA8A8AFA9AFA9AFA9%AFA9AF7EA87EAFA9AFA9A8A8AFA8847EAFA9AFA9AFA9A87DAFA9AFA9AFA9%AFA9AFA9AFA9AFA9AFA9AFA9AFA959A8FF527D7DA8A9AFA9AFA9AFA9AFA9%AF7DA8A8AFA9AFA9A8A9AF7DA8A9AFA9AFA9AF7EA8A8AFA9AFA9AFA9AFA9%AFA9AFA9AFA9AFA9AFA9AFA952FFFFFF00AF84AF84AF84AF84AF7D847DA8%84AF84AF84AF847D7DA884AF84AF84AF7D7D7DAF84AF84AF84AF84AF84AF%84AF84AF84AF84AF84AF2EA8FF7D52AF84AF84AF84AF84A87D847DAF84AF%84AF84AF7DA87DAF84AF84AF84AF7DA884AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF27FFFFFF2EA9AF84AFA9AF7DA87DA884AFA9AF84AFA9%AF84AFA88484AFA9AF84AF7DA884AFA9AF84AFA9AF84AFA9AF84AFA9AF84%AFA9AF84AFA9597DFF528484AFA9AF84AF7E7D7DAFA9AF84AFA9AF84AFA9%AF7DA8A9AF84AFA9A87DAFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84%AFA9AF8452FFFFFFF8AF84AF7DA87D847DAF84AF84AF84AF84AF84AF84AF%7D8484AF7D7D7DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF2EA8FF7D59AF84AF7D7D7DAF84AF84AF84AF84AF84AF84AF84AF7DAF%84AF7D847DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%F8FFFFFF2EA9A87DA8A8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF7DAF7E%A8A8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA959A8%FF52847EA87EAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF7DA87DAFA9%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA952FFFFFF%F8A87DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF7D847DAF84AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF2EA8FF5252A8%84AF84AF84AF84AF84AF84AF84AF84AF84AF84A87D7D7DAF84AF84AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF27FFFFFF2784AFA9%AF84AFA9AF84AFA9AF84AFA9AF84AF7E847DAFA9AF84AFA9AF84AFA9AF84%AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF8459A8FF5284A9AF84AFA9%AF84AFA9AF84AFA9AF84AFA8A87DA8A8AF84AFA9AF84AFA9AF84AFA9AF84%AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA927FFFFFF27AF84AF84AF84AF%84AF84AF84AF7DA87D847DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF27A8FF5259AF84AF84AF84AF84AF%84AF7DAF7D7D7DA87DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF84AF84AF84AF27FFFFFF2EA9AFA9AFA9AFA9AFA9AFA8%A87DA8A8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9%AFA9AFA9AFA9AFA9AFA9AFA959A8FF5284A9AFA9AFA9AFA9AFA9A87DA87E%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9%AFA9AFA9AFA9AFA9AFA952FFFFFF27AF84AF84AF7DA87D7D7DA884AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF2EA8FF7D59AF84AF84AF7D847DA87DAF84AF84AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF27FFFFFF2EA9AF7DA87DA87DAFA9AF84AFA9AF84AFA9AF84%AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9%AF84AFA9597DFF528484AF7E847DA8A9AF84AFA9AF84AFA9AF84AFA9AF84%AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9%AF8452FFFFFFF8847D847DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%2EA8FF7D527D7DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF%84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AFF8FF%FFFF27525952595259525952595259525952595259525952595259525952%595259525952595259525952595259525952595259525952595227A8FF7D%525259525952595259525952595259525952595259525952595259525952%59525952595259525952595259525952595259525952595252FFFFFFA8A8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FFFFFF7DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FD77FF2752277D5252%277D5252277D5252277D5252277D5252277D5252277D5252277D5252277D%5252277D2E52277D5252277D5252277D2E5252FFFFFF277D5252277D5252%277D5252277D5252277D5252277D5252277D5252277D5252277D2E52277D%5252277D5252277D5252277D5252277DA8FFFFFF27527D527D537D7D847E%7D7E847E847E847E8452847E847E847E847E84537D7E847E847D847E847E%7D7E847E8453847E847E847E7D7E52A8FF527D527D527D53847D8453847E%847E847E847E8453847E847E847E847E8452847E847E7D7E847E8453847E%847E8452847E847E8453847E52FFFFFF277D7DA884AF7DA87D7D7DA87DAF%84AF84AF7DA884AF84AF84AF84AF847D7DAF84AF7DAF84AF59527DAF84AF%847D84AF84AF84A87DAF2EA8FF7D52A87DA884AF7D847D7D7DA87DAF84AF%84AF7DA884AF84AF84AF84AF7DA884AF84AF7DAF84AF527D84AF84AF7DA8%84AF84AF847D84AF27FFFFFF2EA8A87DA87EAF84AF7DAF84AF7EA87DA87E%A87DAFA9AF84AFA9AF84AF52AF84AF535252AFA927F8AFA9AF84AF7EAF84%AFA9AF7DAFA9597DFF52847DAF7EA884AFA9A87DAFA8A87DA87DA87DA8A9%AF84AFA9AF84AFA9A859AFA9A827597EAF59F827AF84AFA9A884AFA9AF84%AF7DAF8452FFFFFFF8AF7DA87DA87DAF7DAF84AF84AF84AF7DAF7D847D7D%7DA87DAF84AF52F82784FD05F859F8F852AF84AF7DAF84AF84AF847D84AF%2EA8FF7D59AF7DAF7D7D7DAF7DAF84AF84AF84AF7DA87D847D7D7DA87DAF%84AFF8F82E52FD04F82705F82784AF84AF7DAF84AF84AF7DA884AFF8FFFF%FF2EA9AF7DAFA9AF7DA8A9AFA9AFA9AFA9AF7EAFA9AFA9AFA8A87E7D5227%2727F8F827F82727F87D0052A9AFA9A8A9AFA9AFA9A87EAFA959A8FF5284%A9AF7EAFA9AF7DAFA9AFA9AFA9AFA9AF7DAFA9AFA9AFA8A8525252F827F8%F827F8F852F8F87DF8AFA9AFA8A8A9AFA9AFA9A8A9AFA952FFFFFF27AF84%AF7DAF84847D847DAF84AF84AF7D7D84AF84AF84AF8484F8F8F827F8F8F8%FFF87D27F8522EF85927847DAF84AF84AF7DAF84AF2EA8FF7D59AF84A87D%AF7DA87D847DAF84AF84AF7DA884AF84AF84AF8427F8F8F827F8F87D7DF8%A8F852522705522EA884AF84AF84AF7DAF84AF27FFFFFF2784AFA9A87D84%A9AF84A87DAF84AFA9A87DAFA9AF84AFA9AFF852F852F827F8F8F87D27FD%06F827F82759AFA9AF84A8A9AF8459A8FF5284A9AF84A87EA884AFA8847D%AFA9AF84A8A9AF84AFA9AF8459F827F85227F8F827FD07F8272705F8597E%AF84AF7EAF84AFA927FFFFFF27AF84AF7D7D7DAF84AF84AF7DA884AF7DAF%84AF84AF84AF0527FD07F8A8FFFF52FD04F8527D5227F8F8AF84A87DAF84%AF27A8FF5259AF84AF7D7D84AF84AF84A87DAF84847DAF84AF84AF8484F8%2EF827FD0DF87D5252F8F827AF847D84AF84AF27FFFFFF2EA9A87DAFA9A8%A9AFA9AFA9AF7EA87DAFA9AFA9AFA9AF52F852F87EA85227F8F852FFA827%288428F8F852A9AF7D7D7EA87DAFA9AFA959A8FF5284A8847EAFA8A8A9AF%A9AFA9AF7DA87DAFA9AFA9AFA9AFF82E2752A9842727FD05F82752840027%F8A8A9AF527D7EA87DAFA9AFA952FFFFFFF8847DAF84AF7D8484AF84AF84%AF7D847DAF84AF84AF59F82E272727F82727842E27272752AF84AFF859F8%5284AF84AF7DA884AF84AF2EA8FF7D52A884AF84AF7DA884AF84AF84AF7D%7D7DAF84AF84AF27F827F859F8F827277D27F8F85252AF847DF852F88484%AF84AF7DAF84AF84AF27FFFFFF2EA9AF84AFA8A87DA8A9AF84AF7DA884AF%7DA884AFA92705A8F88405597EA884AFA9AF7DA8A9AF845227A8F852A9AF%84A8A9AF84AFA9597DFF528484AFA9AF7DA87DAF84AFA9A87DAFA9A87DAF%A9AF59F87D2EF8AFF8847DAFA9AF84AF7DAF84AFA9F85952F8A884AF7EA8%84AFA9AF8452FFFFFFF8AF84A87DA87DAF7DAF84A87DAF84AF84AF7D7D7D%52F8AF2727842E277D84AF84AF847D84AF84AF2EF88484F852847D7DAF84%AF84AF2EA8FF7D59AF7DA87DA87DAF7DAF7D847DAF84AF84AF7DA859F827%A8F87D84F852A884AF84AF7DA884AF84AFF8528452F8847D8484AF84AF84%AFF8FFFFFF2E7EA87EAFA9AFA9AF7DA87DAFA9AFA9AFA9AFA8A8F88453F8%53AF5227A8AFA9AFA9A8A8AFA9AFA9AFF884A9AFF8527EAFA9AFA9AFA959%A8FF52847DA8A8AFA9AFA9A87EA8A8AFA9AFA9AFA9AF7E7D27AF2727A9AF%F87DA9AFA9AFA9A8A9AFA9AFA95927AFA952F8A8A9AFA9AFA9AFA952FFFF%FFF8AF84AF84AF84AF7D847DAF84AF84AF84AF84AF84A87D52F8AF8459F8%AF84AF84AF7DAF84AF84AF848484AF848452AF84AF84AF84AF2EA8FF5252%AF84AF84AF84AF7D7D7DAF84AF84AF84AF84AF848452F82EAF84F852AF84%AF84847DAF84AF84AF7DAF84AF845252AF84AF84AF84AF27FFFFFF2784AF%A9AF7DA87DA884A87EAF84AFA9AF84AFA9AF7DA8527D84AF272784AFA9AF%7DAFA9AF84AFA9AF84AFA9AF7DAFA9AF84AFA9AF8459A8FF5284A9AF84AF%7E847DAFA97D84AFA9AF84AFA9AF84A87DAF27A8A9AFF884A9AF84AF7DAF%84AFA9AF84AFA9AF84AF7DAF84AFA9AF84AFA927FFFFFF27AF7DA87D847D%AF84AF847D7DAF84AF84AF7D847DAF84AF7D7D7D5205AF84AF7DA884AF84%AF84AF84AF84AF7D7D84AF84AF84AF84AF27A8FF5259AF7D847DA884AF84%AF7D7D84AF84AF84AF7D7D7DAF84AF7D7D7DF859AF84AF7DAF84AF84AF84%AF84AF84AF7DAF84AF84AF84AF84AF27FFFFFF2E7EA8A8AFA9AFA9AFA9AF%A984A9AFA9AF7EA8A8AFA9AFA9AF7DA8272EA9AFA9A8A9AFA9AFA9AFA9AF%A9AFA9A8A9AFA9AFA9AFA9AFA959A8FF52847DA8A8AFA9AFA9AFA9AF7EA8%A9AFA9AF7DA8A9AFA9AFA9AF7DA8F884A9AF7EA8A9AFA9AFA9AFA9AFA9AF%A8A8A9AFA9AFA9AFA9AFA952FFFFFFF8AF84AF84AF84AF84AF84AF7D8484%A87DA884847DAF84A87DA884AF528484A87DAF84AF84AF84AF84AF84A87D%AF84AF84AF84AF84AF2EA8FF5252AF84AF84AF84AF84AF84AF7DAF84847D%AF7D8484AF84847DAF847D52AF847D84AF84AF84AF84AF84AF847D84AF84%AF84AF84AF84AF27FFFFFF2EA9AF84AFA9AF84AFA9AF84AF7D7D7DAFA9AF%84A8A8847DAFA9AF84AFA87D7DAFA9AF84AFA9AF84AFA9AF7DAFA9AF84AF%A9AF84AFA9597DFF528484AFA9AF84AFA9AF84AFA9AF7DA8A8AF84AFA97D%7DA8A8AF84AFA9AF7DA8A8AF84AFA9AF84AFA9AF84A87EAF84AFA9AF84AF%A9AF8452FFFFFFF8AF84AF84AF84AF84AF7D847DA87DAF84AF84AF7D7D7D%AF84AF84AF7DA87D847DAF84AF84AF84AF84AF7DAF84AF84AF84AF84AF84%AF2EA8FF7D59AF84AF84AF84AF84AF7D7D7DA87DAF84AF84AF7D7D7DAF84%AF84AFFD057DAF84AF84AF84AF84AF7DAF84AF84AF84AF84AF84AFF8FFFF%FF2EA9AFA9AFA9AFA8A87DA8A9AFA9AF7DAFA9AF7DAFA9A87EAFA9AF7EA8%A8AFA9AF7DA8A9AFA9AFA9AFA8A8A9AFA9AFA9AFA9AFA9AFA959A8FF5284%A9AFA9AFA9AFA8A87DAFA9AFA9A87EAFA9A87DAFA8A8A9AFA9AF7EA8A9AF%A9A87DAFA9AFA9AFA9AF7DAFA9AFA9AFA9AFA9AFA9AFA952FFFFFF27AF84%AF7DA87D847DAF84AF84AF84A87DA87DAF84AF84847DAF7D8484AF84AF84%AF7D7D7DAF84AF847D84AF84AF84AF84AF84AF84AF2EA8FF7D59AF84AF7D%847DA884AF84AF84AF84847D7D7DAF84AF7D8484A87DAF84AF84AF84AF7D%A884AF84AF7D8484AF84AF84AF84AF84AF84AF27FFFFFF2784AF7D847DAF%A9AF84AFA9AF84AF7E7D7DAFA9AF84AFA9A87DAFA9AF84AFA9A87DAFA9A8%7DAFA9A87DAFA9AF84AFA9AF84AFA9AF8459A8FF5284A9A87DA8A9AF84AF%A9AF84AFA9A87DA8A9AF84AFA9AF84A87EAF84AFA9AF84A87DAF7D847EAF%84A8A9AF84AFA9AF84AFA9AF84AFA927FFFFFFF87D7DAF84AF84AF84AF84%AF7D7D7DAF847D7DAF84AF7D7D7DAF84AF84AF7D7D7DAF84AF84A87DA87D%AF84AF84AF84AF84AF84AF84AF27A8FF5252847DAF84AF84AF84AF84A87D%7D7DAF7D8484AF84AF7D7D7DAF84AF84AF7D7D7DAF84AF7DA87D847DAF84%AF84AF84AF84AF84AF84AF27FFFFFF2EA9AFA9AFA9AFA9AF7EA87DAFA9AF%A9AFA8A8A9AF7DA8A9AFA9AFA9AF7EA8A9AFA9AFA9AFA9A87DAFA9AFA9AF%A9AFA9AFA9AFA9AFA959A8FF5284A9AFA9AFA9AFA9AF7EA87EAFA9AFA9AF%7EA8A9AF7DA8A9AFA9AFA9AF7DA8A9AFA9AFA9AFA8A87DAFA9AFA9AFA9AF%A9AFA9AFA9AFA952FFFFFF27AF84AF84AF7DA87D847DAF84AF84AF84AF7D%A87DA884AF84AF84A87DA884AF84AF84AF7D7D7DAF84AF84AF84AF84AF84%AF84AF84AF2EA8FF7D59AF84AF84AF7D847DA884AF84AF84AF84AF7D847D%AF84AF84AF84847DAF84AF84AF84AF7D8484AF84AF84AF84AF84AF84AF84%AF84AF27FFFFFF2EA9AF84A87DA87DAFA9AF84AFA9AF84AF7E7D7DAFA9AF%84AFA8847DAFA9AF84AFA9AF7DA8A9AF84AFA9AF84AFA9AF84AFA9AF84AF%A9597DFF528484AFA9A87DA8A9AF84AFA9AF84AFA9A87DA87DAF84AFA9AF%7DA8A8AF84AFA9AF84A87DAF84AFA9AF84AFA9AF84AFA9AF84AFA9AF8452%FFFFFFF8AF7D7D7DAF84AF84AF84AF84AF7D7D7DAF84AF7DAF84AF7D847D%AF84AF84AF7D847DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF2EA8FF%7D59A87DA87DAF84AF84AF84AF84A87D7D7DAF84A87DAF84AF7DA884AF84%AF84AF7D7D7DAF84AF84AF84AF84AF84AF84AF84AF84AF84AFF8FFFFFF27%7EAFA9AFA9AFA9AFA9AF7EA87EAFA9AFA9AFA9AF7DA87DAFA9AFA9AFA9AF%7EA8A8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA959A8FF527D7EAF%A9AFA9AFA9AFA9AF7E847EAFA9AFA9AFA9A87EA87DAFA9AFA9AFA9AF7DA8%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA952FFFFFF27AF84AF84%AF84AF7DA87DA87DAF84AF84AF84AF84A87DAF84AF84AF84A87DA884AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF2EA8FF7D59AF84AF84AF84%AF7D7D7DAF84AF84AF84AF84AF847D7DAF84AF84AF84847DAF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF27FFFFFF2784AFA9AF84A87DA8%84AFA9AF84AFA9AF84AFA9AF84A8A8AF84AFA8847DAFA9AF84AFA9AF84AF%A9AF84AFA9AF84AFA9AF84AFA9AF8459A8FF5284A9AF84AFA8A87DAFA9AF%84AFA9AF84AFA9AF84AFA98484AFA9AF7DA8A8AF84AFA9AF84AFA9AF84AF%A9AF84AFA9AF84AFA9AF84AFA927FFFFFF27AF7DA87D847DAF84AF84AF84%AF84AF84AF84AF84AF7D7D84AF7DA884AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF27A8FF5259AF7D847DA884AF84AF84AF84AF84%AF84AF84AF84AF7D847DA87DA884AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF27FFFFFF2E7DA8A8AFA9AFA9AFA9AFA9AFA9AFA9AF%A9AFA9AFA9AFA8A87DAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF%A9AFA9AFA9AFA959A8FF527D7DA8A8AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF%A9AFA9AF7DA87EAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF%A9AFA9AFA952FFFFFF00AF84AF84AF84AF84AF84AF84AF84AF84AF84AF7D%7D7DA884AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF2EA8FF7D52AF84AF84AF84AF84AF84AF84AF84AF84AF84A87D847D%A884AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF27FFFFFF2EA9AF84AFA9AF84AFA9AF84AFA9AF84A87D847DAFA9AF84AF%A9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA959%7DFF528484AFA9AF84AFA9AF84AFA9AF84AFA8A87DA87EAF84AFA9AF84AF%A9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF8452FFFF%FFF8AF84AF84AF84AF84AF84AF7DA87D847DAF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF2EA8FF7D59%AF84AF84AF84AF84AF84AF7D7D7DA87DAF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AFF8FFFFFF2EA9AF%A9AFA9AFA9AF7EA87DAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA959A8FF5284A9AFA9AF%A9AFA9AF7DA87EAFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA952FFFFFF27AF84AF7DA87D%7D7DAF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF2EA8FF7D59AF84AF7D847DA87D%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF27FFFFFF277DA87DA87DAFA9AF84AF%A9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF%84AFA9AF84AFA9AF84AFA9AF8459A8FF52847EA87DA8A8AF84AFA9AF84AF%A9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF%84AFA9AF84AFA9AF84AFA927FFFFFFF8A87DAF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF27A8FF5252AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF27FFFFFF52275227522752275227522752275227522752%275227522752275227522752275227522752275227522752275227522752%275227522752FFFFA8522752275227522752275227522752275227522752%275227522752275227522752275227522752275227522752275227522752%2752277DFD78FFA8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8%A8FD3DFFF852272E27592E522759275227592E5227592E2E27592E522759%2E52275927522759275227592E5227592E522752275227592E522759F8A8%FD3CFF2E7DA8A8AF7EA87DA87EA8A8AFA9AFA9AFA9AF7DAFA9AFA9AFA9AF%A9AF7EAFA9AFA9A8A9AFA9AF7DA8A9AFA9AF7DAFA9AFA9AFA8A8A959A8FD%3CFF27A87D847DAF84AF84847D847D847DA87DAF7DA884AF84AF84AF84AF%847D84AF84AF7DAF84AF2E277DAF84AF7DA884AF84AF84847DAF2EA8FD3C%FF2784A8A9AF7DA8A9A87DAFA9AF84AFA8A87DA87DA87DAFA9AF84AFA9A8%F87DA952F8F8F85959F8F8AF84AFA9A87DAFA9AF84AF7DAF8459A8FD3CFF%27AF7D7D84AF7D847DAF84AF84AF84AF84A87DAF7DA87D847D7D52A8F8F8%F827FD07F8272EAF84AF7DAF84AF84AF7DA884AF27A8FD3CFF2EA9AFA8A8%A9AF7DA87EAFA9AFA9AFA9AF7DAFA9AFA9AFA9AF7E27F8F82752F8277D27%7D7DF8A852277E84A9A8A9AFA9AFA9A8A9AFA959A8FD3CFF27AF84AF7DA8%7DA884A87DAF84AF84AF7DA884AF84AF84AF8427FD07F852F827FD07F827%52AF84AF84AF7DAF84AF2EA8FD3CFF2EA9AF84AF7DA884AFA9AF7DA8A9AF%8484A9AF84AFA9AF8459F827F8F8F827F8F852A87D52F8F8F8277DA827F8%F87D84AFA8A884AFA9597DFD3CFFF8AF7D847DAF7DAF84AF84AF7D7D7DA8%7DAF84AF84AF8484F859F87D5959F8F8F827A8A8FD06F82EAF5252F87D7D%7D84AF84AF2EA8FD3CFF2E7DA8A8AFA9A87EAFA9AFA9AFA9A87DAFA9AFA9%AFA9AFF82E27275327F8F80027F827F827A8AFA9F827F853AFA9AFA9AF7E%AFA9AFA959A8FD3CFFF8AF84AF84AF7D7D7DAF84AF84A87DAF7DA884AF84%AF27F827F8522705847DAF848459847DAF84AF055227F82EAF84AF7DAF84%AF84AF2EA8FD3CFF2784AFA9A87DA8A87D84AFA9A87DAFA9AF7D84A8AF59%F87D52F8AF27597DAFA9AF84AF7DAF84AFA97DF8AF28F852AF7EA884AFA9%AF8459A8FD3CFF27AF7D7D7DAF84AFFD057DAF84AF84AF7DA87DF827A8F8%528459278484AF84AF7DA884AF84AF59F859AF27F8277D84AF84AF84AF27%A8FD3CFF277DAFA9AFA9AFA9AF7DA8A9AFA9AFA9AFA9AFA9AF52A852F87E%AF5227A9AFA9AFA9A8A9AFA9AFA9AF52AFA9AF2827A8AFA9AFA9AFA959A8%FD3CFF27AF84AF84AF7DA87DA87DAF84AF84AF84AF84AF84A87D2727AF84%52F8AF84AF84847DAF84AF84AF84AF84AF84A852AF84AF84AF84AF2EA8FD%3CFF2EA9AF84A87DA884AFA9AF7DAFA9AF84AFA9AF7DA87EAF84A87DAF27%2EA9AF84AF7DAF84AFA9AF84AFA9AF84AF7DAF84AFA9AF84AFA9597DFD3C%FFF8AF7D7D7DAF84AF84AF84A87DAF84AF84AF7D847DAF84AF84AF7D52F8%AF84AF7DAF84AF84AF84AF84AF84AF7DAF84AF84AF84AF84AF2EA8FD3CFF%277EAFA9AFA9AFA9AFA9AFA9A8A8AFA9A87DAF7DAFA9AFA9A87EAF537DA8%AF7EA8A9AFA9AFA9AFA9AFA9AFA8A8A9AFA9AFA9AFA9AFA959A8FD3CFF27%AF84AF84AF84AF84AF84AF84847D7D7DAF84AF7DAF7D7D7DAF84AF7D847D%7D84AF84AF84AF84AF84AF847D7DAF84AF84AF84AF84AF2EA8FD3CFF2784%AFA9AF84AFA9AF84AFA8A87DA8A9AF84AFA9AF7DA8A9AF84AFA9AF84A87D%A884AFA9AF84AFA9AF84A87EAF84AFA9AF84AFA9AF8459A8FD3CFF27AF84%AF84AF84AF7D847DA87DAF7DA884AF7DA87DAF7DAF84AF84AF7D7D7DAF7D%7D7DAF84AF84AF84AF7DAF84AF84AF84AF84AF84AF27A8FD3CFF2EA9AFA9%AFA9AF7DA8A8AFA9AFA9AF7EAFA8A87EAFA9AF7DAFA9AF7DAFA9AFA9AFA8%A87EAFA9AFA9AF7DAFA9AFA9AFA9AFA9AFA9AFA959A8FD3CFF27AF84A87D%7D7DAF84AF84AF84AF84AF7D847DAF84AF84AF7D847DAF84AF84AF84847D%A87DAF84AF7D8484AF84AF84AF84AF84AF84AF2EA8FD3CFF2E7E847DAFA9%AF84AFA9AF84AF7E847DAF7DAF84AFA9AF7D84A8AF84AFA9AF7DA8A8AF84%AF7DA88484A9AF84AFA9AF84AFA9AF84AFA9597DFD3CFFF8AF84AF84AF84%AF84AF7D847DA884AF84A87DAF84AF7DA884AF84AF84AF7DA87DAF84AF84%AF7D7D7DAF84AF84AF84AF84AF84AF84AF2EA8FD3CFF2EA9AFA9AFA9AFA8%A87DA8A9AFA9AFA9AFA9A8A8A87DAFA9AFA9AFA9A87DAFA9AFA9AFA9AF7E%A8A8AFA9AFA9AFA9AFA9AFA9AFA9AFA959A8FD3CFF27AF84AF84A87D847D%AF84AF84AF84AF84AF7D7D7DAF84AF84AF7D7D7DAF84AF84AF84A87DA884%AF84AF84AF84AF84AF84AF84AF84AF2EA8FD3CFF2784AF7E7D7DAFA9AF84%AFA9AF84AF7E847DAFA8A884AFA9AF7DA8A9AF84AFA9AF7DA87EAF84AFA9%AF84AFA9AF84AFA9AF84AFA9AF8459A8FD3CFFF87D7DAF84AF84AF84AF84%AF7D847DA884AF84AF7DA87DA87DAF84AF84AF84AF7D847DAF84AF84AF84%AF84AF84AF84AF84AF84AF84AF27A8FD3CFF2EA9AFA9AFA9AFA9AFA8A87D%A8A9AFA9AFA9AFA9AF7DA8A8AFA9AFA9AFA9A87DAFA9AFA9AFA9AFA9AFA9%AFA9AFA9AFA9AFA9AFA9AFA959A8FD3CFF27AF84AF84AF7DA87D847DAF84%AF84AF84AF84AF84AF7DAF84AF84AF7D7D7DAF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF2EA8FD3CFF2EA9AF84A87DA87DAFA9AF84AFA9%AF84AFA9AF84AFA9AF7DAFA9A87DAFA9AF84AFA9AF84AFA9AF84AFA9AF84%AFA9AF84AFA9AF84AFA9597DFD3CFFF8A87D7D7DAF84AF84AF84AF84AF84%AF84AF84AF84AF84847D7D7DAF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF2EA8FD3CFF27A8AFA9AFA9AFA9AFA9AFA9AFA9AFA9%AFA9AFA9AFA8A87DA8A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9%AFA9AFA9AFA9AFA959A8FD3CFF27AF84AF84AF84AF84AF84AF84AF84AF84%AF7D7D7DA884AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF2EA8FD3CFF2784AFA9AF84AFA9AF84AFA9AF84A87DA87D%AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9%AF84AFA9AF8459A8FD3CFF27AF84AF84AF84AF84AF7D847D847DAF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF84AF27A8FD3CFF2EA9AFA9AFA9AF7EA87DAFA9AFA9AFA9AFA9AFA9%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9%AFA9AFA959A8FD3CFF27AF7DA87D847DAF84AF84AF84AF84AF84AF84AF84%AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84AF84%AF84AF2EA8FD3CFF277DA87DAFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9%AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84AFA9AF84%AFA9597DFD3CFFF8592E5227592E5227592E5227592E5227592E5227592E%5227592E5227592E5227592E5227592E5227592E5227592E5227592E5227%5927A8FD3BFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 100 Lb(Layer 1) Ln0 A1 Ap0 O0.25 0 0 0 k800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR243.2305 -161.7563 m243.8047 -161.7563 244.2715 -161.2905 244.2715 -160.7163 C244.2715 -79.9087 L244.2715 -79.3345 243.8047 -78.8687 243.2305 -78.8687 C133.8105 -78.8687 L133.2368 -78.8687 132.771 -79.3345 132.771 -79.9087 C132.771 -160.7163 L132.771 -161.2905 133.2368 -161.7563 133.8105 -161.7563 C243.2305 -161.7563 Lf125.7104 -162.0762 m126.2847 -162.0762 126.7505 -161.6104 126.7505 -161.0361 C126.7505 -80.2285 L126.7505 -79.6543 126.2847 -79.1885 125.7104 -79.1885 C16.291 -79.1885 L15.7168 -79.1885 15.251 -79.6543 15.251 -80.2285 C15.251 -161.0361 L15.251 -161.6104 15.7168 -162.0762 16.291 -162.0762 C125.7104 -162.0762 Lf125.7104 -250.7061 m126.2847 -250.7061 126.7505 -250.2402 126.7505 -249.666 C126.7505 -168.8589 L126.7505 -168.2847 126.2847 -167.8184 125.7104 -167.8184 C16.291 -167.8184 L15.7168 -167.8184 15.251 -168.2847 15.251 -168.8589 C15.251 -249.666 L15.251 -250.2402 15.7168 -250.7061 16.291 -250.7061 C125.7104 -250.7061 Lf125.7104 -339.3564 m126.2847 -339.3564 126.7505 -338.8906 126.7505 -338.3164 C126.7505 -257.5088 L126.7505 -256.9346 126.2847 -256.4688 125.7104 -256.4688 C16.291 -256.4688 L15.7168 -256.4688 15.251 -256.9346 15.251 -257.5088 C15.251 -338.3164 L15.251 -338.8906 15.7168 -339.3564 16.291 -339.3564 C125.7104 -339.3564 Lf243.3105 -250.7061 m243.8848 -250.7061 244.3506 -250.2402 244.3506 -249.666 C244.3506 -168.8589 L244.3506 -168.2847 243.8848 -167.8184 243.3105 -167.8184 C133.8906 -167.8184 L133.3169 -167.8184 132.8511 -168.2847 132.8511 -168.8589 C132.8511 -249.666 L132.8511 -250.2402 133.3169 -250.7061 133.8906 -250.7061 C243.3105 -250.7061 Lfu0 Ap1 R0 0 0 0.4 K1 J133.9365 -79.1636 m233.459 -96.7295 lS133.5078 -79.4492 m213.5176 -128.8096 lS133.2305 -79.8223 m182.1309 -146.3232 lS153.5186 -79.1636 m152.6523 -82.1636 l149.0107 -88.5796 l143.9814 -94.3018 l132.875 -99.3735 lS132.7104 -106.6567 m148.3164 -100.1973 lS132.7104 -114.6333 m152.8252 -106.4399 l163.5762 -98.1167 l170.5127 -85.458 l172.5938 -79.3887 lS132.7104 -128.1592 m161.3223 -117.5381 l179.5303 -107.3071 l190.1074 -88.9258 l194.0957 -79.1636 lS132.8403 -137.7832 m166.5244 -124.8208 l186.6396 -112.1621 l199.8184 -90.6602 l204.0664 -79.042 lS132.8403 -146.8867 m171.7266 -132.7979 l195.4824 -118.0586 l210.5693 -92.5679 l215.0078 -79.2847 lS132.9097 -159.7017 m182.1309 -146.3232 l213.5176 -128.8096 l233.459 -96.7295 l239.7021 -79.2153 lS221.3203 -94.4751 m226.1758 -79.2153 lS177.041 -139.3872 m204.1533 -123.0869 lSU1 Ap1 O0 0 0 1 k0 J183.2764 -98.4707 m187.3398 -98.4707 190.6328 -95.1772 190.6328 -91.1138 c190.6328 -87.0508 187.3398 -83.7573 183.2764 -83.7573 c179.2129 -83.7573 175.9189 -87.0508 175.9189 -91.1138 c175.9189 -95.1772 179.2129 -98.4707 183.2764 -98.4707 cf0 O0 0 0 0 k181.542 -90.7793 m182.2188 -90.7793 182.7686 -90.2305 182.7686 -89.5532 c182.7686 -88.8765 182.2188 -88.3271 181.542 -88.3271 c180.8643 -88.3271 180.3154 -88.8765 180.3154 -89.5532 c180.3154 -90.2305 180.8643 -90.7793 181.542 -90.7793 cf186.5703 -90.0737 m187.248 -90.0737 187.7969 -89.5249 187.7969 -88.8477 c187.7969 -88.1699 187.248 -87.6211 186.5703 -87.6211 c185.8936 -87.6211 185.3438 -88.1699 185.3438 -88.8477 c185.3438 -89.5249 185.8936 -90.0737 186.5703 -90.0737 cf0 Ap1 R0 0 0 0.4 K1 J170.0791 -112.6392 m183.6055 -125.3848 lS1 Ap0 O0 0 0 0 k0 R0 0 0 0 K0 J 2 w184.375 -95.6265 m185.4902 -95.5825 186.3896 -94.8076 186.3818 -93.896 c186.375 -92.9839 185.4639 -92.2803 184.3477 -92.3242 c183.2314 -92.3677 182.332 -93.1426 182.3398 -94.0542 c182.3477 -94.9663 183.2588 -95.6699 184.375 -95.6265 cbu0 Ap1 R0 0 0 0.4 K1 J 1 w16.417 -79.4834 m115.939 -97.0493 lS15.9878 -79.7695 m95.9971 -129.1294 lS15.7104 -80.1426 m64.6108 -146.6436 lS35.999 -79.4834 m35.1318 -82.4834 l31.4902 -88.8994 l26.4614 -94.6216 l15.355 -99.6938 lS15.1899 -106.9766 m30.7969 -100.5176 lS15.1899 -114.9531 m35.3052 -106.7598 l46.0566 -98.4365 l52.9922 -85.7778 l55.0732 -79.709 lS15.1899 -128.479 m43.8022 -117.8579 l62.0098 -107.627 l72.5874 -89.2461 l76.5762 -79.4834 lS15.3203 -138.1035 m49.0039 -125.1411 l69.1191 -112.4824 l82.2983 -90.9805 l86.5469 -79.3618 lS15.3203 -147.207 m54.2065 -133.1177 l77.9629 -118.3784 l93.0493 -92.8877 l97.4883 -79.605 lS15.3896 -160.0215 m64.6108 -146.6436 l95.9971 -129.1294 l115.939 -97.0493 l122.1816 -79.5352 lS103.8008 -94.7949 m108.6558 -79.5352 lS59.5215 -139.707 m86.6333 -123.4067 lSU1 Ap1 O0 0 0 1 k0 J44.3062 -98.7246 m48.3691 -98.7246 51.6631 -95.4307 51.6631 -91.3672 c51.6631 -87.3042 48.3691 -84.0103 44.3062 -84.0103 c40.2427 -84.0103 36.9492 -87.3042 36.9492 -91.3672 c36.9492 -95.4307 40.2427 -98.7246 44.3062 -98.7246 cf0 O0 0 0 0 k42.5718 -91.0332 m43.249 -91.0332 43.7979 -90.4839 43.7979 -89.8066 c43.7979 -89.1294 43.249 -88.5806 42.5718 -88.5806 c41.8945 -88.5806 41.3457 -89.1294 41.3457 -89.8066 c41.3457 -90.4839 41.8945 -91.0332 42.5718 -91.0332 cf47.6006 -90.3267 m48.2778 -90.3267 48.8267 -89.7778 48.8267 -89.1006 c48.8267 -88.4238 48.2778 -87.8745 47.6006 -87.8745 c46.9233 -87.8745 46.3745 -88.4238 46.3745 -89.1006 c46.3745 -89.7778 46.9233 -90.3267 47.6006 -90.3267 cfu0 Ap1 R0 0 0 1 K2 w50.375 -88.4194 m54.2769 -83.3906 l58.377 -86.8232 lS51.0688 -91.8008 m60.7793 -90.8472 l70.6436 -92.5566 lS50.2017 -94.8359 m55.7505 -92.2344 l59.3105 -106.5566 lS50.7217 -93.7085 m58.7852 -95.4424 l65.8438 -100.9565 lS38.7568 -89.373 m34.5083 -85.3848 l29.1763 -93.8818 lS37.8901 -91.541 m37.8901 -91.541 l28.7861 -89.1133 l17.1772 -98.9565 lS38.3232 -94.4023 m29.48 -92.8413 l19.3105 -105.3564 lS39.5371 -96.0493 m31.2139 -98.2168 l24.377 -111.4897 lSU0 0 0 0.4 K1 J 1 w52.5591 -112.959 m66.0845 -125.7046 lS1 Ap0 O0 0 0 0 k0 R0 0 0 0 K0 J 2 w45.4048 -95.8794 m46.521 -95.8359 47.4199 -95.061 47.4121 -94.1489 c47.4048 -93.2373 46.4941 -92.5332 45.3774 -92.5771 c44.2617 -92.6211 43.3628 -93.396 43.3701 -94.3076 c43.3774 -95.2197 44.2886 -95.9233 45.4048 -95.8794 cbu0 Ap1 R0 0 0 0.4 K1 J 1 w16.417 -168.1133 m115.939 -185.6797 lS15.9878 -168.3994 m95.9971 -217.7598 lS15.7104 -168.7725 m64.6108 -235.2734 lS35.999 -168.1133 m35.1318 -171.1133 l31.4902 -177.5293 l26.4614 -183.252 l15.355 -188.3237 lS15.1899 -195.6069 m30.7969 -189.1475 lS15.1899 -203.5835 m35.3052 -195.3901 l46.0566 -187.0664 l52.9922 -174.4082 l55.0732 -168.3389 lS15.1899 -217.1094 m43.8022 -206.4883 l62.0098 -196.2568 l72.5874 -177.876 l76.5762 -168.1133 lS15.3203 -226.7324 m49.0039 -213.7715 l69.1191 -201.1123 l82.2983 -179.6099 l86.5469 -167.9922 lS15.3203 -235.8369 m54.2065 -221.748 l77.9629 -207.0078 l93.0493 -181.5176 l97.4883 -168.2344 lS15.3896 -248.6523 m64.6108 -235.2734 l95.9971 -217.7598 l115.939 -185.6797 l122.1816 -168.1655 lS103.8008 -183.4253 m108.6558 -168.1655 lS59.5215 -228.3369 m86.6333 -212.0371 lSU1 Ap1 O0 0 0 1 k0 J84.856 -188.354 m88.9189 -188.354 92.2129 -185.0605 92.2129 -180.9976 c92.2129 -176.9341 88.9189 -173.6406 84.856 -173.6406 c80.793 -173.6406 77.499 -176.9341 77.499 -180.9976 c77.499 -185.0605 80.793 -188.354 84.856 -188.354 cf0 O0 0 0 0 k83.1216 -180.6626 m83.7988 -180.6626 84.3477 -180.1138 84.3477 -179.4365 c84.3477 -178.7598 83.7988 -178.2104 83.1216 -178.2104 c82.4448 -178.2104 81.8955 -178.7598 81.8955 -179.4365 c81.8955 -180.1138 82.4448 -180.6626 83.1216 -180.6626 cf88.1504 -179.957 m88.8281 -179.957 89.377 -179.4082 89.377 -178.7305 c89.377 -178.0537 88.8281 -177.5044 88.1504 -177.5044 c87.4731 -177.5044 86.9243 -178.0537 86.9243 -178.7305 c86.9243 -179.4082 87.4731 -179.957 88.1504 -179.957 cfu0 Ap1 R0 0 0 1 K2 w90.9253 -178.0493 m94.8267 -173.0205 l97.8179 -182.4712 lS91.6191 -181.4307 m101.3296 -180.4771 l110.3032 -184.6821 lS90.752 -184.4653 m96.3008 -181.8643 l99.9424 -194.7832 lS91.2715 -183.3384 m99.3354 -185.0723 l109.6528 -195.3467 lS79.3066 -179.0034 m75.0586 -175.0151 l69.7266 -183.5117 lS78.4399 -181.1709 m78.4399 -181.1709 l69.3359 -178.7432 l58.4116 -194.0464 lS78.873 -184.0317 m70.0298 -182.4712 l63.2671 -197.731 lS80.0874 -185.6797 m71.7637 -187.8472 l72.1973 -203.1499 lSU0 0 0 0.4 K1 J 1 w52.5591 -201.5894 m66.0845 -214.335 lSu16.417 -256.7637 m115.939 -274.3301 lS15.9878 -257.0488 m95.9971 -306.4092 lS15.7104 -257.4229 m64.6108 -323.9229 lS35.999 -256.7637 m35.1318 -259.7637 l31.4902 -266.1797 l26.4614 -271.9023 l15.355 -276.9736 lS15.1899 -284.2568 m30.7969 -277.7979 lS15.1899 -292.2334 m35.3052 -284.04 l46.0566 -275.7168 l52.9922 -263.0586 l55.0732 -256.9893 lS15.1899 -305.7598 m43.8022 -295.1387 l62.0098 -284.9063 l72.5874 -266.5264 l76.5762 -256.7637 lS15.3203 -315.3828 m49.0039 -302.4209 l69.1191 -289.7617 l82.2983 -268.2598 l86.5469 -256.6426 lS15.3203 -324.4863 m54.2065 -310.3975 l77.9629 -295.6582 l93.0493 -270.168 l97.4883 -256.8848 lS15.3896 -337.3018 m64.6108 -323.9229 l95.9971 -306.4092 l115.939 -274.3301 l122.1816 -256.8154 lS103.8008 -272.0752 m108.6558 -256.8154 lS59.5215 -316.9863 m86.6333 -300.6875 lSU1 Ap1 O0 0 0 1 k0 J84.856 -277.0039 m88.9189 -277.0039 92.2129 -273.71 92.2129 -269.6475 c92.2129 -265.584 88.9189 -262.29 84.856 -262.29 c80.793 -262.29 77.499 -265.584 77.499 -269.6475 c77.499 -273.71 80.793 -277.0039 84.856 -277.0039 cf0 O0 0 0 0 k83.1216 -269.3125 m83.7988 -269.3125 84.3477 -268.7637 84.3477 -268.0859 c84.3477 -267.4102 83.7988 -266.8604 83.1216 -266.8604 c82.4448 -266.8604 81.8955 -267.4102 81.8955 -268.0859 c81.8955 -268.7637 82.4448 -269.3125 83.1216 -269.3125 cf88.1504 -268.6064 m88.8281 -268.6064 89.377 -268.0586 89.377 -267.3809 c89.377 -266.7031 88.8281 -266.1543 88.1504 -266.1543 c87.4731 -266.1543 86.9243 -266.7031 86.9243 -267.3809 c86.9243 -268.0586 87.4731 -268.6064 88.1504 -268.6064 cfu0 Ap1 R0 0 0 1 K2 w90.9253 -266.6992 m94.8267 -261.6699 l97.8179 -271.1211 lS91.6191 -270.0811 m101.3296 -269.127 l110.3032 -273.332 lS90.752 -273.1152 m96.3008 -270.5146 l99.9424 -283.4336 lS91.2715 -271.9883 m99.3354 -273.7227 l109.6528 -283.9971 lS79.3066 -267.6533 m75.0586 -263.665 l69.7266 -272.1621 lS78.4399 -269.8203 m78.4399 -269.8203 l69.3359 -267.3936 l58.4116 -282.6963 lS78.873 -272.6816 m70.0298 -271.1211 l63.2671 -286.3809 lS80.0874 -274.3301 m71.7637 -276.4971 l72.1973 -291.7998 lSU0 0 0 0.4 K1 J 1 w52.5591 -290.2393 m66.0845 -302.9844 lSu134.0176 -168.1133 m233.5391 -185.6797 lS133.5879 -168.3994 m213.5977 -217.7598 lS133.3105 -168.7725 m182.2109 -235.2734 lS153.5986 -168.1133 m152.7314 -171.1133 l149.0898 -177.5293 l144.0615 -183.252 l132.9551 -188.3237 lS132.79 -195.6069 m148.3965 -189.1475 lS132.79 -203.5835 m152.9053 -195.3901 l163.6563 -187.0664 l170.5928 -174.4082 l172.6729 -168.3389 lS132.79 -217.1094 m161.4023 -206.4883 l179.6094 -196.2568 l190.1875 -177.876 l194.1758 -168.1133 lS132.9199 -226.7324 m166.6035 -213.7715 l186.7188 -201.1123 l199.8984 -179.6099 l204.1465 -167.9922 lS132.9199 -235.8369 m171.8066 -221.748 l195.5635 -207.0078 l210.6494 -181.5176 l215.0889 -168.2344 lS132.9897 -248.6523 m182.2109 -235.2734 l213.5977 -217.7598 l233.5391 -185.6797 l239.7813 -168.1655 lS221.4004 -183.4253 m226.2559 -168.1655 lS177.1211 -228.3369 m204.2334 -212.0371 lSU1 Ap1 O0 0 0 1 k0 J202.4561 -188.354 m206.5186 -188.354 209.8135 -185.0605 209.8135 -180.9976 c209.8135 -176.9341 206.5186 -173.6406 202.4561 -173.6406 c198.3926 -173.6406 195.0986 -176.9341 195.0986 -180.9976 c195.0986 -185.0605 198.3926 -188.354 202.4561 -188.354 cf0 O0 0 0 0 k200.7217 -180.6626 m201.3984 -180.6626 201.9482 -180.1138 201.9482 -179.4365 c201.9482 -178.7598 201.3984 -178.2104 200.7217 -178.2104 c200.0449 -178.2104 199.4961 -178.7598 199.4961 -179.4365 c199.4961 -180.1138 200.0449 -180.6626 200.7217 -180.6626 cf205.751 -179.957 m206.4277 -179.957 206.9766 -179.4082 206.9766 -178.7305 c206.9766 -178.0537 206.4277 -177.5044 205.751 -177.5044 c205.0732 -177.5044 204.5244 -178.0537 204.5244 -178.7305 c204.5244 -179.4082 205.0732 -179.957 205.751 -179.957 cfu0 Ap1 R0 0 0 1 K2 w208.5254 -178.0493 m212.4268 -173.0205 l215.418 -182.4712 lS209.2188 -181.4307 m218.9297 -180.4771 l227.9033 -184.6821 lS208.3516 -184.4653 m213.9004 -181.8643 l217.543 -194.7832 lS208.8721 -183.3384 m216.9355 -185.0723 l227.2529 -195.3467 lS196.9063 -179.0034 m192.6582 -175.0151 l187.3262 -183.5117 lS196.04 -181.1709 m196.04 -181.1709 l186.9355 -178.7432 l176.0117 -194.0464 lS196.4727 -184.0317 m187.6299 -182.4712 l180.8672 -197.731 lS197.6875 -185.6797 m189.3643 -187.8472 l189.7969 -203.1499 lSU0 0 0 0.4 K1 J 1 w170.1592 -201.5894 m183.6846 -214.335 lS1 Ap0 O0 0 0 0 k0 R0 0 0 0 K0 J85.9771 -273.8896 m87.0933 -273.8457 87.6182 -272.9941 87.9844 -272.1602 c88.5835 -270.793 87.0996 -272.3496 85.9834 -272.3936 c84.8672 -272.4375 83.6836 -271.6436 83.9424 -272.3184 c84.269 -273.1689 84.8608 -273.9336 85.9771 -273.8896 cb1 O0 0 0 1 k88.2437 -97.3887 m88.541 -97.3887 88.7827 -97.1353 88.7827 -96.8232 c88.7827 -96.5107 88.541 -96.2573 88.2437 -96.2573 c87.9463 -96.2573 87.7051 -96.5107 87.7051 -96.8232 c87.7051 -97.1353 87.9463 -97.3887 88.2437 -97.3887 cf88.5103 -96.8223 m88.8081 -96.8223 89.0488 -96.5688 89.0488 -96.2563 c89.0488 -95.9438 88.8081 -95.6909 88.5103 -95.6909 c88.2129 -95.6909 87.9717 -95.9438 87.9717 -96.2563 c87.9717 -96.5688 88.2129 -96.8223 88.5103 -96.8223 cf87.8652 -97.0156 m88.1626 -97.0156 88.4038 -96.7622 88.4038 -96.4497 c88.4038 -96.1372 88.1626 -95.8843 87.8652 -95.8843 c87.5674 -95.8843 87.3262 -96.1372 87.3262 -96.4497 c87.3262 -96.7622 87.5674 -97.0156 87.8652 -97.0156 cf205.5557 -97.3887 m205.8535 -97.3887 206.0938 -97.1353 206.0938 -96.8232 c206.0938 -96.5107 205.8535 -96.2573 205.5557 -96.2573 c205.2578 -96.2573 205.0176 -96.5107 205.0176 -96.8232 c205.0176 -97.1353 205.2578 -97.3887 205.5557 -97.3887 cf205.8223 -96.8223 m206.1191 -96.8223 206.3613 -96.5688 206.3613 -96.2563 c206.3613 -95.9438 206.1191 -95.6909 205.8223 -95.6909 c205.5254 -95.6909 205.2842 -95.9438 205.2842 -96.2563 c205.2842 -96.5688 205.5254 -96.8223 205.8223 -96.8223 cf205.1768 -97.0156 m205.4746 -97.0156 205.7158 -96.7622 205.7158 -96.4497 c205.7158 -96.1372 205.4746 -95.8843 205.1768 -95.8843 c204.8789 -95.8843 204.6387 -96.1372 204.6387 -96.4497 c204.6387 -96.7622 204.8789 -97.0156 205.1768 -97.0156 cf0 R0 0 0 0 K2 w85.8359 -185.8867 m86.9526 -185.8433 87.8516 -185.0684 87.8438 -184.1563 c87.8359 -183.2446 86.9253 -182.541 85.8091 -182.5845 c84.6929 -182.6284 83.7939 -183.4028 83.8013 -184.3149 c83.8091 -185.2266 84.7202 -185.9307 85.8359 -185.8867 csu0 Ap1 R0 0 0 1 K189.3447 -88.166 m193.2471 -83.1372 l196.1104 -90.5566 lS190.0391 -91.5474 m199.749 -90.5938 l204.377 -91.623 lS189.1719 -94.582 m194.7207 -91.981 l198.3623 -104.8999 lS189.6914 -93.4551 m197.7559 -95.1895 l204.1104 -103.3564 lS177.7275 -89.1196 m173.4785 -85.1313 l167.3105 -91.623 lS176.8604 -91.2871 m176.8604 -91.2871 l167.7559 -88.8599 l156.8311 -104.1626 lS177.2939 -94.1484 m168.4492 -92.5879 l156.9102 -111.0898 lS178.5068 -95.7959 m170.1836 -97.9634 l170.6172 -113.2666 lSU1 Ap1 w243.2305 -161.7563 m243.8047 -161.7563 244.2715 -161.2905 244.2715 -160.7163 C244.2715 -79.9087 L244.2715 -79.3345 243.8047 -78.8687 243.2305 -78.8687 C133.8105 -78.8687 L133.2368 -78.8687 132.771 -79.3345 132.771 -79.9087 C132.771 -160.7163 L132.771 -161.2905 133.2368 -161.7563 133.8105 -161.7563 C243.2305 -161.7563 Ls125.7104 -162.0762 m126.2847 -162.0762 126.7505 -161.6104 126.7505 -161.0361 C126.7505 -80.2285 L126.7505 -79.6543 126.2847 -79.1885 125.7104 -79.1885 C16.291 -79.1885 L15.7168 -79.1885 15.251 -79.6543 15.251 -80.2285 C15.251 -161.0361 L15.251 -161.6104 15.7168 -162.0762 16.291 -162.0762 C125.7104 -162.0762 Ls125.7104 -250.7061 m126.2847 -250.7061 126.7505 -250.2402 126.7505 -249.666 C126.7505 -168.8589 L126.7505 -168.2847 126.2847 -167.8184 125.7104 -167.8184 C16.291 -167.8184 L15.7168 -167.8184 15.251 -168.2847 15.251 -168.8589 C15.251 -249.666 L15.251 -250.2402 15.7168 -250.7061 16.291 -250.7061 C125.7104 -250.7061 Ls125.7104 -339.3564 m126.2847 -339.3564 126.7505 -338.8906 126.7505 -338.3164 C126.7505 -257.5088 L126.7505 -256.9346 126.2847 -256.4688 125.7104 -256.4688 C16.291 -256.4688 L15.7168 -256.4688 15.251 -256.9346 15.251 -257.5088 C15.251 -338.3164 L15.251 -338.8906 15.7168 -339.3564 16.291 -339.3564 C125.7104 -339.3564 Ls243.3105 -250.7061 m243.8848 -250.7061 244.3506 -250.2402 244.3506 -249.666 C244.3506 -168.8589 L244.3506 -168.2847 243.8848 -167.8184 243.3105 -167.8184 C133.8906 -167.8184 L133.3169 -167.8184 132.8511 -168.2847 132.8511 -168.8589 C132.8511 -249.666 L132.8511 -250.2402 133.3169 -250.7061 133.8906 -250.7061 C243.3105 -250.7061 LsLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF